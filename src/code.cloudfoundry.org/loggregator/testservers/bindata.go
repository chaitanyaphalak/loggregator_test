// Code generated by go-bindata.
// sources:
// loggregator-certs/doppler.crt
// loggregator-certs/doppler.csr
// loggregator-certs/doppler.key
// loggregator-certs/loggregator-ca.crl
// loggregator-certs/loggregator-ca.crt
// loggregator-certs/loggregator-ca.key
// loggregator-certs/metron.crt
// loggregator-certs/metron.csr
// loggregator-certs/metron.key
// loggregator-certs/reverselogproxy.crt
// loggregator-certs/reverselogproxy.csr
// loggregator-certs/reverselogproxy.key
// loggregator-certs/syslogdrainbinder.crt
// loggregator-certs/syslogdrainbinder.csr
// loggregator-certs/syslogdrainbinder.key
// loggregator-certs/trafficcontroller.crt
// loggregator-certs/trafficcontroller.csr
// loggregator-certs/trafficcontroller.key
// DO NOT EDIT!

package testservers

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dopplerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIQXrzbW3d4W26RsdAMdq539TANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE3MDIyMjE4MTEwNVoXDTE5MDIy
MjE4MTEwNVowEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAOl6SucS4+8tWF3o7FuXkSuywSK7R34x+OnoAo6us6d7yKqc
JojqPQ2wPWqOUHyytnwd5E2KBtlmqxBHLKr2xq/T3Z7l9R60IuP4HMEx/DnWz5d3
NYlj4qJ+qCbpfQN6BX9citOWo2/UjAo4Ogbd3QirQckw9mqczSU1PnUQFBqBt1Yt
32beubR6/b6qxIROd0b0HJq4OqBZLvZWsl9NCk8WPSU0m9dfGh8GRWHnWX2yIVCE
5fvNKhMEISL5LrW64CDEzTOBUZFK9wnKYsFogYZU4kCXK0HPtcDKQ+bEhtYBX98N
v6+D9eAng8NalxM+/NiQ/zwRJrWNFaMnxMBwvAkCAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
6Ga1uDMgKphJNkMnlXbegrjAO6kwHwYDVR0jBBgwFoAUtZ/ev+ciQPA9cwaZlAmG
X/CF0OEwDQYJKoZIhvcNAQELBQADggIBADhdWO+o2Ay7/a0ySQBnHNQUAvLlcA6f
46beMmQzrBdElgmcAS6YzpkvLCEyYaGaid9f8Zec4Izqu9LvkeaPVH8mLc0PAl6H
kLyEBYPsMg+SJzPrLMObcEh+q8yaRwaMechOB3q9ZqHMsX5KILlfdw7LTxQWB3WH
HPBcljMVv4RBMaiOxcJZoBMDMq/utJJo/pK8C787Sz7+HE55TKzjIJq6SQnUrTot
jAmCi1z5DeToS/uyxkElWuFRNv+YpNZ6yToR9XZnBqlyCIO0TtBZ7lAIWYTxfvzy
SoaCekxzWxbxdLeekPDbEKaKFRxYfkLaRrnhbY45j3eTZcYd3B4nBz30wJ33aI8l
x+kf2DS3pNqEZsOew39wfAbOOY7AHmSTtU/O3BbinKzNBjR5jvxc0fUAtXBVoHVv
3dU+J+n5rStZl1MQtcd9ro3Mctlq4CykR+O+65aWP9rFnTRWxr2SgymRLBwnZ38m
QjaPpNshObp0fw326+gKzjMSWiGyQA9Pni+ljihHvAiHHsWaPOofpyT2WexGvXsv
5TUpFzB5DljOebkGnBX9K8kgYpUJo9ZX3ygSuCVb10bHOEIa8Ch4VyXGi4YQw2/j
cauhHFKvXBBR4+vqhWQknJhUEDWroUJ7UBnVsqrF6oOOga9fpYi3QDgABc4e+d65
1ySNJv+ffBTM
-----END CERTIFICATE-----
`)

func dopplerCrtBytes() ([]byte, error) {
	return _dopplerCrt, nil
}

func dopplerCrt() (*asset, error) {
	bytes, err := dopplerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1487787065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVzCCAT8CAQAwEjEQMA4GA1UEAxMHZG9wcGxlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBAOl6SucS4+8tWF3o7FuXkSuywSK7R34x+OnoAo6us6d7
yKqcJojqPQ2wPWqOUHyytnwd5E2KBtlmqxBHLKr2xq/T3Z7l9R60IuP4HMEx/DnW
z5d3NYlj4qJ+qCbpfQN6BX9citOWo2/UjAo4Ogbd3QirQckw9mqczSU1PnUQFBqB
t1Yt32beubR6/b6qxIROd0b0HJq4OqBZLvZWsl9NCk8WPSU0m9dfGh8GRWHnWX2y
IVCE5fvNKhMEISL5LrW64CDEzTOBUZFK9wnKYsFogYZU4kCXK0HPtcDKQ+bEhtYB
X98Nv6+D9eAng8NalxM+/NiQ/zwRJrWNFaMnxMBwvAkCAwEAAaAAMA0GCSqGSIb3
DQEBCwUAA4IBAQDQ3B2AK5JcQdGWgssVombEBGrVIn9NQ7b5U2JoFrVJBGC3/9DG
OfW8yLp693icDt2YT07NFmYGj8uwUqw3N5EfYrMtEmLuv/19E9Us6xSq6GN26TuP
S8OQchoSN+6Oes7QY9tr+N6pz3STpM4zB0OpDWBXhasDksUfcFqnkVKuPSEto87T
M9Di2xxIt09bH95iUqbdNcJcDzuxpgsA79kqsynzVHGbpDe2jSjgqNEQ7LQAHeW3
/m7w8oJnDqgiZ78K0kL4c3mRduc+cm14vtLApfJrAzoINXRRPPzSg8/Wcx3zBXzs
bn9PgW4FwcaODxKKpdG2I25wOfJWuv63pwbb
-----END CERTIFICATE REQUEST-----
`)

func dopplerCsrBytes() ([]byte, error) {
	return _dopplerCsr, nil
}

func dopplerCsr() (*asset, error) {
	bytes, err := dopplerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1487787065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dopplerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA6XpK5xLj7y1YXejsW5eRK7LBIrtHfjH46egCjq6zp3vIqpwm
iOo9DbA9ao5QfLK2fB3kTYoG2WarEEcsqvbGr9PdnuX1HrQi4/gcwTH8OdbPl3c1
iWPion6oJul9A3oFf1yK05ajb9SMCjg6Bt3dCKtByTD2apzNJTU+dRAUGoG3Vi3f
Zt65tHr9vqrEhE53RvQcmrg6oFku9layX00KTxY9JTSb118aHwZFYedZfbIhUITl
+80qEwQhIvkutbrgIMTNM4FRkUr3CcpiwWiBhlTiQJcrQc+1wMpD5sSG1gFf3w2/
r4P14CeDw1qXEz782JD/PBEmtY0VoyfEwHC8CQIDAQABAoIBAGYKp9/0NqCbHer1
WQ/y32TM3HJ0jZuO9a4tU6jOnABQLnS6iHEAhyyLYVxH1M+bP/xhCB4HfFTZ9VvI
77HM5yuDmnHPKWGA81rVXqPlV8pjoxkc5c4lVLEWUCGpnJS/aNWwOZCeXtIKgCYb
SukjYG5ggwEOoDQaUeK4MZLyMwcd4pa2GOG3782/aUv8KbTi4lEqHordI5Kq6nw/
f+vrOc82h4DMaFjN4Y3rsyHNsR7wfvY48d4Ii3ZvIEeonkVk+I/+0u4TvYupKUI7
i/NSJyYK9gM5ACdr2ZUqLN8drDKxM/pHIlxywnSqx8x6uXBmNuXCpnWZx1xXopg7
/NdrHD0CgYEA7ODrVmD6Y4NHJB8UkMDS5ALtimS7ZWDtb1Ih1KeK3mTluFtAMTP1
wBe4ACZM1KkdTnGLlqF7SOpqUv7YFmHoICWAYP3xZ02U8OZqMcZnPIWV35/iqT24
rfrW6YKg9HJ9DNVWQBaPnYTLGl+kmaCPvP3e6IfjOHzpXRPsBdQG9s8CgYEA/FMY
HviRTTZ0uAhE0/hH5Wt47jS0FfwNwmJBicEPrAgS6TM0cb3o1aV7N5t/LeyiyP9Y
w0qs4wSPIJn4+9D7v0RNTq4kdilNkiInLTpWALoMdESRMSdUt7yfNIUYk2U6tU19
XMxTqBzAO1BUWOxfjNNBMhz9GIWZ8Zm62M2dVacCgYEA06KsgFNKwkgS8oHWRPIS
OWcoRcJz70KnQBNYaH98QfBRkeHtO0iaIxLN8UxGzqV9qo0l0uHZnS7a6eYIuA6n
brkytvWLjekxzf1/GZOSvu73FYHq55xeeQqoop50IZJ8iU+9rKq7i1eOgrS7AgsD
AS6szoJCD0EC2ocnE5n40t8CgYBBOoHrz7pQSZmW0ZxpZ6++YTAb9Efxvv0XmSr0
H5KbmGK7Il+WX8/HG0ZlM6+HAbt7Vndt1Ooorc8KUIOLJZVO9qs9gcsvOLIy6t1R
1djRy0bY77jRCifeb8aAXz/hKrQolmWoDbI6rWQMcVG8wy5YS2x5NgE/y5nmWSVy
UoUv1QKBgFi/wwB8GjmoDfgaGOCmdXI9zYIg+OdhAcOUtOu2tXoCZC23oJ2vihtR
5wHGZ3qU/vZ+3Ec4JG3YeoAMLZoe5wGDgVXvGnUp0s6CSN1y5amqALRy8Qxo4Un5
SfBWW2caV7hSXP90jrOwnoCnEMHT7WmG+B446S2/P2cmgTWIBizM
-----END RSA PRIVATE KEY-----
`)

func dopplerKeyBytes() ([]byte, error) {
	return _dopplerKey, nil
}

func dopplerKey() (*asset, error) {
	bytes, err := dopplerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doppler.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1487787065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChzBxAgEBMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMTDWxvZ2dyZWdhdG9y
Q0EXDTE3MDIyMjE4MTEwNVoXDTI3MDIyMjE4MTEwNVowAKAjMCEwHwYDVR0jBBgw
FoAUtZ/ev+ciQPA9cwaZlAmGX/CF0OEwDQYJKoZIhvcNAQELBQADggIBAAsBF7LJ
p/w6VHt2Qj4bTroNa7L04OOERTNhK35NTOPY26zWBSavF/yidd7YqpaHwNZ0gOfm
hK7peg2211E6Br5PFU53YvNkzp5hXxuLgKip/kZ1iBkHTgub4lpdKB5AaGKMD0j4
Kc2vERGo2fNXv0qbCatj15QS56MysGq/kdY6oCdGMGKlfZ4IWMBnMNRLOi+3nBXc
wRKSmhzTga8ok8tZJTvIPWjb91U29PmIiVh/bGWYW7Grs58YOz0USjm6Pk2pH8s4
Q43zfBuIOy/gktbCRONfMP1ECxDzAMo4s2/5iug5pwenCyUsc4RQuOkWdBKCrIiY
vORnBl6yi1WP13zzSHOnbzrDbAFVX3gVeOhlrDp8X7NU9bUOkYG8XeizVtIRHEXE
WLNDx+Q7NHVcNqr2+zjrYkh2JnWq9N6Ye/M35amxTuQQs2gW6hjANNAwoE/K4cyz
3b6Sv2+e/6DY67DmySndqAbQkrfLVVL7szJ1+eunJPfKFTQcuTpp3kETfG1ep8vV
yLgxVwjUly3CyhLVO3kPzTe19MgbfJinExRxpcGgwpAPTYO+9VRXazNfiTER1fSF
h1TbjW5gAMC/Gft/jhrM3yA40XJ3r3RBWiR3XDuRZ9ooNvFo0HBLJ0xVzsWNJv7Z
9UOkPn31N1sKCYfxK5fzJMyFEh0twih6DQNQ
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1487787065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8DCCAtigAwIBAgIBATANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1sb2dn
cmVnYXRvckNBMB4XDTE3MDIyMjE4MTEwMloXDTI3MDIyMjE4MTEwNVowGDEWMBQG
A1UEAxMNbG9nZ3JlZ2F0b3JDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBAOO+L+wG9Npo8+PHH8xASUav+Pw4A8uEiyVa1kK0GZCNpkOpneqgDBPRp2S+
ZxzaiZMRfR9V/LgQ/3gaiOjtJrg9u/XX6w9PlIypRHI630X/+lX1mE6fjdfdps9a
6fwIQwBGG6XdfjyNu7xr8sNn7dLgavTm/WaAOEx2F/UAkgMaqNBtgn/5nvOib2jA
lKFhjNTnVrrJyMoF0wsK9aLEGLfc0uzhK7wQxODxm/inZHLWkiP21TgEE0wUAbQp
9ogz/PMPy3xCauCSeYBu+M532G9zFiJGrmzOHu3TEw4VjGRVf+x4CoUJ5FKz++Ej
n1SDSsSqhsj+hz1AQMgKSHjep6nD/Yuv5x9bBKlUvmXRPnlpQ+gAj+gag/Pae16H
tJlLlRsIVrB1nJT1zsaxoz6DTdCw9BkG6u3BKF+2aIbAkEXydPZSABunSPtRy8VV
l3ySWvmOcKp1UwkFzp1uF/IEF2Kpo0FacEoEu8mJ91KW/y90qQ2OE/0Sjf8DFEVk
+TAOp3olHIwDZtoMdom0irJZXVYG3bbuqPF0FN0TS7j4KHAeWZAw8TtQotIdc9lB
Plbyxy6ebrikwWvwhc4FFblT9idnnmUVYNh67FuR7dpVw42UQBFEaDNy0H/Lnb4y
LsdRO8L0lcMZOaEWxaU3tbGLNQ6vXfnQYxd2HLqRVzogntsdAgMBAAGjRTBDMA4G
A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBS1n96/
5yJA8D1zBpmUCYZf8IXQ4TANBgkqhkiG9w0BAQsFAAOCAgEAXtfFhm6OefdIQsPw
6oq9er5wPmTuxdj47DVfFuAQY36EiF5O753uO9/iMzlpPPLWLXn2rGz/IvBYrBsE
pl4685lwEIWv3q/pxurk8fkODgI8svL8kbs2676ZwM1mmhxyEMgGqKjxgiRkN8pe
xQ8EIMcxgaK2SmAgmc4h5LV6YiOROfZP9oDi2jYjfPplTwAo/aNWMIONlHwQqB3l
M3lSUf0rSf2mhRSLWPl42OoXWTf5oUgs/VK2TgUTxA/ruq9ghcT6Ixr+lqN7kMVB
CclroKll7/NiHINaw3rAopUMAQxb9IIn9oAC+1i7zyAs10BNGEiRh31qYcpql8oj
+C0ehmHqLykorApzquAWYdqWce81UaHW+FDnNcqxxSDIX6lU/CotpI0eryDwyT5o
PnLs0wnMlBTzH8HZWSUWeaeuhSBuZGYBFnb0KhDas14+RC6/MHgQ0+tO4hpkZvn9
JaS2Y7/HSMMBPXKDvztDvWPbWBXGuRpc/EIV6zjJV3jCPENO2uJkkO26hIsMYm76
vbMi5utreno7mv/+P85kC7T0Fw40ajM5CNVq02/gbj09CKinjMazCbG5bn5dD+wG
xVFAZI98M7sxhjRN8EcFqCX2SvwTPdlEPDCYKPHS3hqHmDaRH8+jVB8rKST3dv6k
2HEPa7pTLJZxdNSlaU+nJoHDX0M=
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1773, mode: os.FileMode(292), modTime: time.Unix(1487787065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1487787065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJDCCAgygAwIBAgIQAwx9oHVTux6OH4AFN63vGzANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE3MDIyMjE4MTEwNloXDTE5MDIy
MjE4MTEwNlowETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAyDg3UIlhzT/uzuz+rVCZx4Iw5EiWudyERYZknaqCQ7Y103FE
xx5aBiG6tbJCbXTfvphGpwnKDlKJMDR27+c3OoZYvEzPWE33O+lh+E9G4xEl+Bh6
Ta0Ut7OC/Wi+4RZWBjfyKinI+S3d+m3mDVeKQhfxWelbKMLce+U8A/rYXb1RsFP/
HVczIJ3hZ18NMgdExTrxFJPdxHz6SsZUbtvTowPrw2wu41GJhhSIVtAbTzhrowzZ
2y+21Zz8k+nXe8VV+EeXXisT7pK8CCcWrBzliopacyuu+du3BvxRI2vDibMRriQk
u1LRBrmQ0R5cml2l7ZYg6V2DiPKyAVO8GvLpKwIDAQABo3EwbzAOBgNVHQ8BAf8E
BAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1UdDgQWBBQd
OLc6N9v+42R1ydyRBhVULTpp9TAfBgNVHSMEGDAWgBS1n96/5yJA8D1zBpmUCYZf
8IXQ4TANBgkqhkiG9w0BAQsFAAOCAgEAubWPEcH5QfNglcmqgTvo/kBU4vElTo2P
0ot9yRhKV89AGvVCUXhyg4rkS4HyILxyYvYYGBGn9trMBivMlprd6aonJgaEkoBj
RTerVS3fVq3mbFB1n3vJrHGtJFcXuMGVYee2tjIjei/1I5Ro1XvMRZJOp9y4JBYd
Zk/Hih1ZkLip4qtLTWDSniQ73ilhnExFjklKYJgx/2ZbzvVImKJezeYchiQZPCvl
2BSsSlHvlIt5rB7D/HXv+1BVLGuw7QCmB9NlgAeig5QDK3VKG+ZXomSwY2Oww1L0
JK/HGbUAYrAcXNzFccscxHs8RbgMN0VAbypaZK4wpDHWY0Ach+K2m63gR7cb+TWr
u9gkxRK4o92WrSpcDPqAsL0Y2Uj2pcWYM/mjUDfYg8H1Q47vRrVJsQbGFxkLl8vz
wnSHKZrKgKCP1Gcw1RC6JKKxnUkQYiPmVcszg1SPm9b7fIwOBhdB/pajIZcFM76h
Ta/Ix7tfEZ71LmwLC3rolXzbOu2pNZJ8qzrHai/IogGgsziSZoqVVFrNhsol4Xos
Wf8wIbcq+DyxSdfsZ0ErHyS0iV/00KOlNW5715p/8oi/kDU5ZJw1IH/ug5dLWzNw
UqbeuRJaREMfNsWCQDmzg43jsgi53+wsU7BQMkyi5F0d1j1XI1v6vKOhApkyJZ0+
oEeWh6LHirU=
-----END CERTIFICATE-----
`)

func metronCrtBytes() ([]byte, error) {
	return _metronCrt, nil
}

func metronCrt() (*asset, error) {
	bytes, err := metronCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1487787066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAyDg3UIlhzT/uzuz+rVCZx4Iw5EiWudyERYZknaqCQ7Y1
03FExx5aBiG6tbJCbXTfvphGpwnKDlKJMDR27+c3OoZYvEzPWE33O+lh+E9G4xEl
+Bh6Ta0Ut7OC/Wi+4RZWBjfyKinI+S3d+m3mDVeKQhfxWelbKMLce+U8A/rYXb1R
sFP/HVczIJ3hZ18NMgdExTrxFJPdxHz6SsZUbtvTowPrw2wu41GJhhSIVtAbTzhr
owzZ2y+21Zz8k+nXe8VV+EeXXisT7pK8CCcWrBzliopacyuu+du3BvxRI2vDibMR
riQku1LRBrmQ0R5cml2l7ZYg6V2DiPKyAVO8GvLpKwIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBAKvMR9idEmTTHIM8jQtfkxmrQzzqu5JcRcH8ec6XbxL7HN5DvJ66
kWTcmqdKSp3shjXgcnNK6uLVzanOFEOaY9Mg/QVt2Onqux56Ruj7IZNp6zoJHp6C
f1OkSF+pAAhbi4e8gUXFuf+JhWw94krTT7f8yP/2JPOWtQ6aERx6OnunKC/IUCEp
gXaxxaXsgahRc2A7ACxtEmvb4aNNwFp99uFTXnNscqyWt4XpweSV8YRi0nD3GIk6
ppKJmK5W7m/I5GT5zgDmHXMin8u8iQZaD9ygudzi/VOTjGhBKV8m5dDfCp47jOvB
ZbmRPJ2m3ocffLhdS/hcsV21nLD0TJHpqNA=
-----END CERTIFICATE REQUEST-----
`)

func metronCsrBytes() ([]byte, error) {
	return _metronCsr, nil
}

func metronCsr() (*asset, error) {
	bytes, err := metronCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1487787066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAyDg3UIlhzT/uzuz+rVCZx4Iw5EiWudyERYZknaqCQ7Y103FE
xx5aBiG6tbJCbXTfvphGpwnKDlKJMDR27+c3OoZYvEzPWE33O+lh+E9G4xEl+Bh6
Ta0Ut7OC/Wi+4RZWBjfyKinI+S3d+m3mDVeKQhfxWelbKMLce+U8A/rYXb1RsFP/
HVczIJ3hZ18NMgdExTrxFJPdxHz6SsZUbtvTowPrw2wu41GJhhSIVtAbTzhrowzZ
2y+21Zz8k+nXe8VV+EeXXisT7pK8CCcWrBzliopacyuu+du3BvxRI2vDibMRriQk
u1LRBrmQ0R5cml2l7ZYg6V2DiPKyAVO8GvLpKwIDAQABAoIBAHiUipOhOVpwL3VF
e5eLXCGwQZuqL8QdjzeD2aKupqb63G3L4Hz+xX6934E/qwvagEl70ckVdy+q+14h
qqOOn09Ky7QTmif3RHc7dboinHFxyWkh7L5NB5YesTvGUnaiigpStTA5XATdX7tL
ZmoQl354huz8Qd9Jg5nGE5/d+WJx6kWa1s9fFdcW9y215+h5lWj8Nh0yUm+Y4th1
GR2g1pmzq4xxeDMFLueOVEgYBdmV8jsrfX5BPSLGU98Cg7jUQLSbkRfdw6jd+P/K
ro4CNM4YGWrNaoXTiBaPkTEQAqAZuIVfR/5D//gNiCu/viZD1aDj/Xb5goBRL5u3
E5w0zkkCgYEA4/K9FicgM3r9MsPgFSDQCl7AaKccfwfeOoY8ZR4vCnytBF2LJRw2
tltEKo2wuy1sMz3DItjMfllMmO0ByH8JQPo/5oP7Ie9UJqLCY/9yY1YeJW7LyNG9
OzqoNqARV5eVwZdQKWvflxylZ12r0pemufaVgEKsC2DzpfxowDc/9L0CgYEA4Nvq
9Ej/ZfvL+052beXXCJIEDPZEsk+N4DjScHLgX+2/GFQRbu6NAA8rLD+fJvCqtTGq
t3wF8QPghpcmNCGEfh0NInXG354psVVPVJofs2MO8lPejrxGN89rC+im4Bkh9Zgu
gyiB8RGQGnkFAKDfLNjdL2dtjojPVES/66wfmAcCgYBMBo+uLcp9oQ2FuvKn2VPJ
waRmwyWr8JHb7x2BlDmYQ9Do3dIkxG4zD+mCT9Ob+iBWTskgfDJoCZyUfKfVmRkb
BNv/JBHEVbA5Wpt/ApnCK9zOG0/4YIu+j2e/IE/oaPRXpwHjbskZ+0HnYcSG7nF7
IJToPFRpTyK0P6UoRsUb+QKBgQDDpbYubWGDm+4lMGUNREGwnFPX72NgfqXkpaw8
2UdvUE7IXUV57yhSF+CptIXG/Pqbg6aV1dzZk1UF5ngAPfWpQZ/PDwlGQrjmKmNH
Kn9Qt20m3mC0cw7pupjamMiyDkwlBA/cYR+G4JAw6IG4xUDKJbt2ZpjFvzYejV8s
MOygewKBgQDfEtQr6ELzbFzxRtbJstu1FWQ+wXB8j5SpYMx0xZQK/8I1EyK5eTNW
rJpaTiHBjQZdFZixr1kY9ixIN2kGfSCgnvCHRIE5z5rAAkiMnxUvK1rUeH08TVDR
q1NhPBwYpL23VwUqJSXLR23AfwmWlw5E4v5U2kGR8zyDm1Cy5N+RDA==
-----END RSA PRIVATE KEY-----
`)

func metronKeyBytes() ([]byte, error) {
	return _metronKey, nil
}

func metronKey() (*asset, error) {
	bytes, err := metronKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1487787066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELjCCAhagAwIBAgIRAN8k5IiNGYmepQn4/P02YFwwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xNzAyMjIxODExMDZaFw0xOTAy
MjIxODExMDZaMBoxGDAWBgNVBAMTD3JldmVyc2Vsb2dwcm94eTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAJaE6p22Mxz9f+AzJ+aQ4+lpbsjA1cuoEOGZ
hj58o2ZY7wefv4/Up4W3cNeo3i9PeucX/I/LtFX5+/qSnWcLunbpA13vDNBqAmfb
csWW8ZXCRvslYi2dpRaeUDK2U8Qq7P5QYoxNu0bengFvKEXHb1pDqOHN7G47h/dw
zop1J/MztE5b/DB2h/vXH2AGaS8sdEUNzpPAznwZlyv/Yt0CV//QngZEiux0HzCs
hKUFvkckXwjIbwy7ErDEi5gDiNActOG9HwqGOI7zDD5eOiRzh9ANMEgNWzOaVNH9
Vm2oAJPMNCMTqqOZGsEFyh5HSnUsTBmnEKOHe1dhL8nl88lCd/MCAwEAAaNxMG8w
DgYDVR0PAQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAd
BgNVHQ4EFgQUDHYHJh56sUN1CDo16h5/4+6IkaYwHwYDVR0jBBgwFoAUtZ/ev+ci
QPA9cwaZlAmGX/CF0OEwDQYJKoZIhvcNAQELBQADggIBALGhLHEE5bsGv40RYRm7
w8XfOxtrgnMaTAL8IJxT4x7tv7+eKmU9cXygf7MDaMxUl17EhjZd/puh5o1XKA42
djJ9NDUB20OtkZmFQ7Z1op2EDo/bIOr+Hf3n3ziH74oFlhgPt0EJ3zWVJ8dTh5d7
7HxZK0SS8a4Njq/VKlKYWaKH84Vs+l0kO9V09dNqVx5aa/Ah8BZyAWjgbda2mZAW
LB2tIhuYQHIxXBmNd2STPamszb9YaqhcA2d55apd10jtfrTD8us64KtBrbO37Zby
YAL4sowycuAf/lmIXlYxR+ZneFAO1LydLP9jSgrOg1FQeGrLsfxFa946VNapzp/w
S19CHnJpm9Xb2AFT4Xgmrl0c8CNxa89IUFNDA6gGlcmoHjzRsGfNNI5wjsQekGT+
Ti4pkcQNACtEBj8j7PL4PYh60xLqzwM8uMxb1H8a1zaWZzY8iD8CeGuH8UHbD1KN
0uzv5Z7vR22xDaTDM9/7THtrLlljev793lRxdqt6eCxDijkt+aeXEw6W7yWy1e93
LZVkE9Be3+aU8Yi6jJwSPDXCjxnVAIvqtqHX2qDbVWQj2KcrcX9DmrjqcT7pc6iA
eZL1YNORCamS1glFekng2hiKiAFYC+Z3neOPE4RO/6uWgyHE8QPK8y/LJtRAU2Gi
PcG0uAN4Y8sFQ6Ln6Ul152Ep
-----END CERTIFICATE-----
`)

func reverselogproxyCrtBytes() ([]byte, error) {
	return _reverselogproxyCrt, nil
}

func reverselogproxyCrt() (*asset, error) {
	bytes, err := reverselogproxyCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.crt", size: 1509, mode: os.FileMode(292), modTime: time.Unix(1487787066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICXzCCAUcCAQAwGjEYMBYGA1UEAxMPcmV2ZXJzZWxvZ3Byb3h5MIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAloTqnbYzHP1/4DMn5pDj6WluyMDVy6gQ
4ZmGPnyjZljvB5+/j9Snhbdw16jeL0965xf8j8u0Vfn7+pKdZwu6dukDXe8M0GoC
Z9tyxZbxlcJG+yViLZ2lFp5QMrZTxCrs/lBijE27Rt6eAW8oRcdvWkOo4c3sbjuH
93DOinUn8zO0Tlv8MHaH+9cfYAZpLyx0RQ3Ok8DOfBmXK/9i3QJX/9CeBkSK7HQf
MKyEpQW+RyRfCMhvDLsSsMSLmAOI0By04b0fCoY4jvMMPl46JHOH0A0wSA1bM5pU
0f1WbagAk8w0IxOqo5kawQXKHkdKdSxMGacQo4d7V2EvyeXzyUJ38wIDAQABoAAw
DQYJKoZIhvcNAQELBQADggEBAIO5dp1Jk2FN41f+vw6Zv9n+Z40lZMf/GvxToh5C
Chth+Sv4gTPt3abGwOW0qnOVPRLRDban5ZLiyExbJEvcfxkghumAhWMXS1YJCXdX
agvOuybuqMCIzV+EdX6h89y3tUF/unVTlszMEsxOLvBOoDZvSUjLOOAv8TtDZGaL
rECicNicGJQ8q5QRTmkJ6QNBmZ1awzguhvg0KbHz9qSCYvxD40vKjM83G2rBON7M
90zUAcsOogKNvtgydVNxeJM/UH3rrA0jqGz88eQznzxUmBqF/LydFyKjv6bIoMyB
2kZ1S5+4Ss4aJUtDsRY9ziAZ8kFVCw+Bykv8Ol6zcLLbX9g=
-----END CERTIFICATE REQUEST-----
`)

func reverselogproxyCsrBytes() ([]byte, error) {
	return _reverselogproxyCsr, nil
}

func reverselogproxyCsr() (*asset, error) {
	bytes, err := reverselogproxyCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.csr", size: 899, mode: os.FileMode(292), modTime: time.Unix(1487787066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _reverselogproxyKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAloTqnbYzHP1/4DMn5pDj6WluyMDVy6gQ4ZmGPnyjZljvB5+/
j9Snhbdw16jeL0965xf8j8u0Vfn7+pKdZwu6dukDXe8M0GoCZ9tyxZbxlcJG+yVi
LZ2lFp5QMrZTxCrs/lBijE27Rt6eAW8oRcdvWkOo4c3sbjuH93DOinUn8zO0Tlv8
MHaH+9cfYAZpLyx0RQ3Ok8DOfBmXK/9i3QJX/9CeBkSK7HQfMKyEpQW+RyRfCMhv
DLsSsMSLmAOI0By04b0fCoY4jvMMPl46JHOH0A0wSA1bM5pU0f1WbagAk8w0IxOq
o5kawQXKHkdKdSxMGacQo4d7V2EvyeXzyUJ38wIDAQABAoIBAQCJ1aG7VpOr4n/t
YSsSum/a2M+4Ss39NyRuUtZZ9mzzVlFdW+5h2cymaHuPIXaFQHU9lfuT+mhjqw4S
QZyeNmFEbtDEfhnv6IPXc1/AjR8hkszJQ0yKlSgOdF7gcZJ3uw9XO2ljLfNnTIjI
q2/npl/T+s12Kcpuj1lNQCIDLJGu5KySd9qQN1u5oxilD77dJfZyqxQznbm6c82/
W/65j82Whyqlt4GTFPH4s9ig8sl8EzaAep+EsQ2PkufyU2L+A2aeV33Sc7UnXiYk
hdvq7F2ZsiCvKfFJxhkEvld2V1Alhz10UBTmaNmKmklMgt/34cvNVq26Of/MiQTl
nyPzTvJRAoGBAMEudYu+xQu6uFvesdgrOLOuWXTz8nFIF5PgpsU9JrdyjC7QcGQq
lqzl6pFwAPnET0d+OCwZvyAyw0Px0/mulf/RP3qyUN9SRB4HF2WZNo743rkCDx7/
+iblunp5Y1Byuw2EXT39QRoyGnOk/pImVJtyPslp6NAYinj/aMC3xNZ3AoGBAMd3
ANs9OdMzml+EZmOFwvRp9amPWXY97FwGG1w9++4xtKrxZe3xzxedJ3NEh/X0fhQN
ol+ia5ZZ3T7bS9W6+lAUe6UapfJpp65UksQO2ZjCo6I9gqGSgWC7Y0k0IXFlBZHT
pJ1Ejv7UKQ/+MW+VZdLVjSM6PDeVcgeQIECY3L1lAoGARl3l80FKBTu+a7hyj4su
3ERl0XQKm7jm3ba3CKF9uNTAu0yxo8rfl5soFlH2CQS43BHd5DJ8q/3Roq4zyH8P
pF9UAB1z1+TfaxCqNRfaB7ofZsSZPXGAbSrBAlu1EVi5SfMtA6d8T05w1C8Fi7bq
mrTCqhsp8qL9zZU7Uvede4ECgYAcuAmrh1k4C4oCjrGfSrcTMd5pF3auC6Roa4is
80++r/FvW2ptpA9JOxtfAVMCGr28bWofkucisrWkQzbcAxvfQ9O5peiWypeWBh9L
k0fJMt0Ukv6n/Mwb/V8CPztBdGYk5PAipKhiEHIJF3ROuJf8jzrPA6d/6UiNxjae
lmPR8QKBgAX4xq/gjHcMzEnXjTMNR7yZhN7oixB7/n8Njt4+oWjoKxBsRd7STkG2
WEJUk3szsqpQUYqs5BAUVAtOwpEijvkWf4QlCZ4nlL8rUroQflB0se+epdblRLCK
LDi+lkZq7drbTNN9fx8PmWuxvG/fI1fpDqQJoW1aq+S4ZETIbgpI
-----END RSA PRIVATE KEY-----
`)

func reverselogproxyKeyBytes() ([]byte, error) {
	return _reverselogproxyKey, nil
}

func reverselogproxyKey() (*asset, error) {
	bytes, err := reverselogproxyKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "reverselogproxy.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1487787066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELzCCAhegAwIBAgIQaaFXP+Jd03O+Aypu5DrIuzANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE3MDIyMjE4MTEwN1oXDTE5MDIy
MjE4MTEwN1owHDEaMBgGA1UEAxMRc3lzbG9nZHJhaW5iaW5kZXIwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCjVMX4HV+UmVuDzSevOD6qX7rngbLVtZsv
sSb/gaQKTdIiF+H4faIgFTU2OStSyMyXMAESJzFSZio2sQZG1+eGo1WLX8njEBr5
d03NBBvBeVz1wYCV1w0fAdEAupoiBNPl4qc2RUFlUnpCxYOADiWS546Pu9zB6KrW
WZ1qaBnsE2lIJRQIF4H7a0n0aMx9Mz7dccKCr5NWT2M2rrQta5zO0hEr5VMhF5x6
SMrCHpZu1MG/nbhQpW2JPfvCECHpGIOWdH9792Lc4pnb5ovnxXwZf+GsDruZi8/H
IH9G/eS3wbmbKRGXFV8l8Myv9gFF6sSsqrUFVJzmMiuU5lsOyWBJAgMBAAGjcTBv
MA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
HQYDVR0OBBYEFDfco9G9mB+pW5Eo4c4EfMrAzmWRMB8GA1UdIwQYMBaAFLWf3r/n
IkDwPXMGmZQJhl/whdDhMA0GCSqGSIb3DQEBCwUAA4ICAQCIWOK2DMRKRO1WF69N
myp9Ykm6xQYk/ptS78kWfm3RVo7v3YzltEhO4q5rN7/tooqkyAv/P7vGf+bUTXvM
4zAQ+WqjVBZR43pSf2CEKyQ01wkuH1nGlTy9ZZ1aSZ+jHi4Ekcq3x+yjStfmlj/y
BbyVIJRQteDYXV5yRc+pBGjLABrhHVBIdhp0QWkeGUxBkAJIDVQsxKnpNttIZOvq
2D3/KI+PQ6c9dCMMpkgrxnKhGAFbf3z59W7vnlUwnHuOtoluRuyRzppzeqxv18z/
uHxxmJ61hiS43fghCILfYrIcjANmI7C/F/Q37UdLLzZFAlS90zpzWmNC2biGCt6N
uM6kUdKMGAwlaVk/6iNVeMndoMIsJjU2kjMbwRnAWMpXWc+RyYb74ck5QOiehyS5
+BI+iYpjEHFojPOo9FdW9hvOLrzwboeP4L5g38/Yw4V4H4XFYfZcv4DvozGQ9zTm
pERUvOc+bGRnPwWTxrZqQQKGtg4eqKve+L33qA0B9SIDP2lPM/qwZmjaoQJHsaNE
wuvs4Arg8XDJx/1XXq7I9bgMqAUyFYPyYxdaYUL9wwDLFyIeZKZ2GK5p0AOkPCm2
dUfkUo3UAHZHYkFnaymfnpv3h4yQq8g5zgWDC/Qc8QMl0cvQleWZAt7dmBy9wQu6
thQqQrYRReICC3FLMbzb8Kum7A==
-----END CERTIFICATE-----
`)

func syslogdrainbinderCrtBytes() ([]byte, error) {
	return _syslogdrainbinderCrt, nil
}

func syslogdrainbinderCrt() (*asset, error) {
	bytes, err := syslogdrainbinderCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1487787067, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRc3lzbG9nZHJhaW5iaW5kZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCjVMX4HV+UmVuDzSevOD6qX7rngbLV
tZsvsSb/gaQKTdIiF+H4faIgFTU2OStSyMyXMAESJzFSZio2sQZG1+eGo1WLX8nj
EBr5d03NBBvBeVz1wYCV1w0fAdEAupoiBNPl4qc2RUFlUnpCxYOADiWS546Pu9zB
6KrWWZ1qaBnsE2lIJRQIF4H7a0n0aMx9Mz7dccKCr5NWT2M2rrQta5zO0hEr5VMh
F5x6SMrCHpZu1MG/nbhQpW2JPfvCECHpGIOWdH9792Lc4pnb5ovnxXwZf+GsDruZ
i8/HIH9G/eS3wbmbKRGXFV8l8Myv9gFF6sSsqrUFVJzmMiuU5lsOyWBJAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEAld9D9Yk9SckktWTsKLgUfDvnYZ0hYrMQe6Xx
rjiRF7sy2XjkgsvsIvktoX1kfak/M1NFqnj6g5UvreZ3e/WfWnO6Q6XJkwOM4Bmx
DBzJiwuCXzevesmg9VQTq6e1sdZZU9tSpcVloj/TBp2U6pd59PMrSvVvf15C4n9I
fqNwel+M2n0ABjNhjMV9FuBKkxA5mUetenRJ54zvfBEN6Y2TYxZ4Tx1iWc86hMQL
nwSJLh3GJ5D9f+GkKH10dnQDn9yaogVLdwdQhM/ojQ8uPIxcXLusfieJQAg+S9RA
8R7G6V6jfhUCLh9pMP6b954GHMYwU5U9JEJrKI9FN9BoBv5a/g==
-----END CERTIFICATE REQUEST-----
`)

func syslogdrainbinderCsrBytes() ([]byte, error) {
	return _syslogdrainbinderCsr, nil
}

func syslogdrainbinderCsr() (*asset, error) {
	bytes, err := syslogdrainbinderCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1487787067, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogdrainbinderKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAo1TF+B1flJlbg80nrzg+ql+654Gy1bWbL7Em/4GkCk3SIhfh
+H2iIBU1NjkrUsjMlzABEicxUmYqNrEGRtfnhqNVi1/J4xAa+XdNzQQbwXlc9cGA
ldcNHwHRALqaIgTT5eKnNkVBZVJ6QsWDgA4lkueOj7vcweiq1lmdamgZ7BNpSCUU
CBeB+2tJ9GjMfTM+3XHCgq+TVk9jNq60LWucztIRK+VTIRecekjKwh6WbtTBv524
UKVtiT37whAh6RiDlnR/e/di3OKZ2+aL58V8GX/hrA67mYvPxyB/Rv3kt8G5mykR
lxVfJfDMr/YBRerErKq1BVSc5jIrlOZbDslgSQIDAQABAoIBAHYRXvaHzUMvRO9X
C1vnja09fG/D2xIPsLneFrHW9k0YilFo8EngD6WfjxK+aunyC6sy4WNM/6NwBQ36
E+58PnqeccVJnjhMuSMishQE50eJwsBIe/pVNb/3YS1ktuzmjoL8wCFEGQz0fTrt
aqzUDSdPykdu5xspZO2EZH25+RskmU3fpXTbLUyPUBjiUOoJ5MkR4aM6Z3sxOVF2
p7jEzPPDz82M6oMWqgn9XeL9kNwjmUMl8fGu0EVDpzsaZdSJrWs20O8AlN80q8Pq
1DXMKMxKSNyGRA0roFi7LtngrwivFBsZAsxOLkTXzjrJRmO1v9KLb8dh8PRAm6vz
AWsLT30CgYEAxk1rCUr9trfPYbDZLokY9Rj/fYBsUUtlOsZeS8gbC4gHb0WtJuZu
Vfch69DU7yK5T62PfR0SBIdcbz88AoIfVRy3MSx22RRPVoyomHwyswVFXYXvzfD5
D+7KzxRPQo3qweHIYmizFxW7NkgqRp+puj9GLbZ9dUrAB5asDhyTCxsCgYEA0tqD
/KzwttsTn2C49jXL4wx6ull2P7G3reaeB+ZTOOKf4XdlhpALRrFH7mwULIhJIbPn
6cUSU7YCGRmrWMSo7RYGGonrLOaKjANYCglkRGp4mTKEJbFDnWqLhapI3by3h7XD
EIQmxd3Ys/oHIYZoyvb5iJ3cNJHTAfPDNOIa9GsCgYAdwLXjkg3ZIWELLkaXtdg5
xgNnaCJYXDCXDfZN9nsgUsuSxWiCYqaBXXAIeq/IJXSaYNcblYYDie+zfVBaq/1Z
ftJ5nUtDrMlumfId1tyggZTzwEnHo3UrD8/8G/b8bGChsGepZD4io48QSOmW6RPF
LwMvjqbqN0nymYe9IkppqwKBgDGrQ9grrPCGHtM2Z5uoBIVRlT98f3x1kr0mTCe0
O/p0eBEWnRXbrKxUaothbkcnO4Ly7DiHMdACWfAruc9JVDm1LG7n+jwzeoOM7ho/
KB1tr0b3PWXbof/c70znVg7Vu63+RRsI5lFJ9xg+V5uwG9Nj5lgmR48iosAc+ejl
MlBNAoGBAKWdfrDZZZoKK9780FK30BHEEMx+3AJ/KZq8Gt3WwGpCM7wLzPbveH6z
31HN9iizVlIUp84FxqO0CeDFcsTW+H3loGH6KYUbaeNHnuOF+WXs5po6vh71PaNW
Rg3DMiC75JiZjPFaULb28xkQ2WSsEdYaCZCZ8vr8Tw3Lkf3mtq8s
-----END RSA PRIVATE KEY-----
`)

func syslogdrainbinderKeyBytes() ([]byte, error) {
	return _syslogdrainbinderKey, nil
}

func syslogdrainbinderKey() (*asset, error) {
	bytes, err := syslogdrainbinderKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslogdrainbinder.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1487787067, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEMDCCAhigAwIBAgIRAMCeFK851LlM/5SkifhNJ5MwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xNzAyMjIxODExMDZaFw0xOTAy
MjIxODExMDZaMBwxGjAYBgNVBAMTEXRyYWZmaWNjb250cm9sbGVyMIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1wRwMJlWHvx/M68TjEBpSgvZOftVijVJ
YNUcWFUdd3DCbdSCsriaq84IbDVaivctNnZbsbFlFZHKGjAAe0J7zd8uiroM4YbC
Q08qWUMoYU7yGa/VDJkZhoxIXBV23g3mnjLZWied7b6jfgl6Ww7Mpuw9u65eCWnF
QpbYjkweYd0JYE3414F22Kc3eHOqvVS7EjLWnluY2VWyzGBYxSCUrDBejzE89EvS
RPPTC0zT20xkiHh9bIX9J6icjDKPJsSvqD29+CoTkw8rG1/ik7vYhxU00DqwDLvH
cA6uR/JQBPTtXm3pKnVcd9yD2jyKJFZc4ZWHL1W5ceiZcV17YqDccQIDAQABo3Ew
bzAOBgNVHQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
MB0GA1UdDgQWBBSIjfDM/V+I5zgifDNqgpocPN+WvjAfBgNVHSMEGDAWgBS1n96/
5yJA8D1zBpmUCYZf8IXQ4TANBgkqhkiG9w0BAQsFAAOCAgEABTfPbZ0rpXpGXkQI
Pki0JlKpr0zOABp7xuIZBHEQfsDyM5K3s9ovmHCHNYsOmbq59AEbqps5X9OrYz4I
joTGsw9/0Hv9hqJhZsRy+GguefB1RzPKlLq6yuIjDLRQED/nVPNQgdTh2gHtVKmy
VFRRdVKmUJ1Y1X5mHgJgqPiSdhASZFNMue8UbZl3QCQwgyPJhpIK/3Ka4AnC/MAB
g6KGRieFg5888jAdn8t9a0MRDe/VUEnzkEaVYTbhV/Ldt+V3C1lcKMb51/M3Qpd/
8teJywgzBcuF3Ca3hOpa+94vCwr7gjDkxiUIH+yQMHoCmYkQZy64B6mv9LH4NFu0
rJLkKttICKdOhTu0lBsoKq5KVvGudeUQ7AqSTITM4GqCgyPGs8ScuRLru9DDbLNU
+tU/YEyWyWt5VpAeYNwlBHcThDqsa9S1LOtEj0lZIoM7JtSR4PhG7G52DR5Vmob+
95GEcesn+pG25iVN+rokkmjXCSEpzC2oulYxp0OQcG7Pv9ZpHxVPOIIWuh7J+obv
PhJxn8EMoPxTpviYRwotqOBw49IaONyYKUxc0f+wV7VK0B5ePa5C33NV0zrtVFOb
wehggSa1hDjTHgzhbSTjDsO+f6+Z36Mzq0gSWt6eYcvMPvqxomf3lUpg6LkbvyIM
FOQ1IdV+BeDJpa4XVj9jMFdoARY=
-----END CERTIFICATE-----
`)

func trafficcontrollerCrtBytes() ([]byte, error) {
	return _trafficcontrollerCrt, nil
}

func trafficcontrollerCrt() (*asset, error) {
	bytes, err := trafficcontrollerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1487787066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRdHJhZmZpY2NvbnRyb2xsZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXBHAwmVYe/H8zrxOMQGlKC9k5+1WK
NUlg1RxYVR13cMJt1IKyuJqrzghsNVqK9y02dluxsWUVkcoaMAB7QnvN3y6Kugzh
hsJDTypZQyhhTvIZr9UMmRmGjEhcFXbeDeaeMtlaJ53tvqN+CXpbDsym7D27rl4J
acVCltiOTB5h3QlgTfjXgXbYpzd4c6q9VLsSMtaeW5jZVbLMYFjFIJSsMF6PMTz0
S9JE89MLTNPbTGSIeH1shf0nqJyMMo8mxK+oPb34KhOTDysbX+KTu9iHFTTQOrAM
u8dwDq5H8lAE9O1ebekqdVx33IPaPIokVlzhlYcvVblx6JlxXXtioNxxAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEA01+Rwzku1VlTebn1QzKxWqZF25lVtcZKq2do
GYKLoYf11Kw2IFuMyUA+tSsauf9/ZxPmVVjbqBd2zaVz7Bqlb5TKwoYmzlkpUCVR
2AjzclfWcuZgSfI4c2nJqWWNMH1RMhxGM5Uruy0OCXc7S8x2m8WPsUXkRY4yesZf
ty6JdER7jQQlbhwEWNMK8oWpQrIlXWUyItGKYskU2bpjNhva9PgN7rN44mwSB9E4
Vf3ioprtWxOXx8jeQrWo/vXQ9bwCzX8ktgS2G6LCZ/O9lnshxn/0u5OPFV6Ldm8N
mA3EhgSNbz2yY7Skhb0iynwv5a65sVUHw8xwtX7ZikwHcxdRvw==
-----END CERTIFICATE REQUEST-----
`)

func trafficcontrollerCsrBytes() ([]byte, error) {
	return _trafficcontrollerCsr, nil
}

func trafficcontrollerCsr() (*asset, error) {
	bytes, err := trafficcontrollerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1487787066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _trafficcontrollerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEA1wRwMJlWHvx/M68TjEBpSgvZOftVijVJYNUcWFUdd3DCbdSC
sriaq84IbDVaivctNnZbsbFlFZHKGjAAe0J7zd8uiroM4YbCQ08qWUMoYU7yGa/V
DJkZhoxIXBV23g3mnjLZWied7b6jfgl6Ww7Mpuw9u65eCWnFQpbYjkweYd0JYE34
14F22Kc3eHOqvVS7EjLWnluY2VWyzGBYxSCUrDBejzE89EvSRPPTC0zT20xkiHh9
bIX9J6icjDKPJsSvqD29+CoTkw8rG1/ik7vYhxU00DqwDLvHcA6uR/JQBPTtXm3p
KnVcd9yD2jyKJFZc4ZWHL1W5ceiZcV17YqDccQIDAQABAoIBAAZk9mUrmjkPr0S9
Nyqbm8X89jfYNqIGlakQjWg/F8I+kzmq8TwZa1gip3N4Xrn1Qd31xSJSsTvj+wuu
U8VWo9HqijrL76ghVtOjnhHLgn7qVx7WcNKQFwc+UsSSStetuCcKQhaBSRwR6FDO
PVpJ5WItcmSLefZzs88YJ1aMAvdMCo0nJmY00jymi7nrXJD1ai2rASAdfTJWPCSu
0Jro6RX5C2j2wDyy08Ew4zNLhXj2FR8yGa7615HZt10IP5l44RvG5rqz2rZ4Qii0
jDl81Nldq5UgM0MxjMLIHpwzJPV0fFyrBnte/UVZdqamyIdMFylG4sTh3EjAkjJu
dcc1NjECgYEA9BfZdXy9RbHsE+LeC8/ohs7JaysZrdOp0PmxGsHswCB+PrnlNb9u
Bq5FYTZW/ovZc+cKj8HAEkIVQDvZ1JceRN7okwfkLc7LiAkd4oUgDZb/CYi8UYCK
H+HJBT5Ibn/Gyr9Bk42GCzJsaPg6V5URFdPrSpE77odyZeMLC57coj0CgYEA4YF/
/9O10RKpwFq6d1lk9kFq5EamOmFL7xmeZEV3WCxRqeFcKGD9yPWQDTG6wa0HOPey
YJZYTMrfxyJLP4X/qJDZ5T57Chudh1yCPULg1podqaoIwrcrfLE6DNJEMhcNDylu
6KwcBfapxHCY1OWeAnDT3lbToVQ3jeyLaikJykUCgYBUSR/357jbphJk04PlBEfA
tQrsDJfzZBFRbcbv/GKp/Q5azooNQyrU97xRUxg7EUNnODJ3bWnLZDI+Wexf8kar
dWVNz/3Eq5GwSaWeIGXvC2LJggO1CPOpCqgFPXp5XXnhbKVSNB5DI4g3vu82auzZ
YrHur7PIK9EeyYV438RD6QKBgDoqNOG/sb3jmnVK8Z2nKSt7ZB7NOkMEpZleekRS
xp2vkMDIqASiP9N9w1Ij6Y/bGWnQOeo/3TaxfVbXuaEA5xiLhChlHUdWKCOp8M3s
WiIATnZcrTXMGSNocxirg3uIBo5KmZjaC8BeBxvsDv+a2k62228V5jBOkKXCxZL0
UtohAoGAF2yeqi0MA8yuz5LjnmcDnuG9llJbvTHntlgQl7i7igvyYIV7geivXQz/
bfnwsPnTo1XO9pt2aIjDjPD/znh5JOuubfrkSj/h18XPerM0yZOMaN+xL7yxZCVj
805lerEgui/12ypSR11Decl6CEEGW47+pF2CEAXNCjZVocrD8fI=
-----END RSA PRIVATE KEY-----
`)

func trafficcontrollerKeyBytes() ([]byte, error) {
	return _trafficcontrollerKey, nil
}

func trafficcontrollerKey() (*asset, error) {
	bytes, err := trafficcontrollerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trafficcontroller.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1487787066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"doppler.crt":           dopplerCrt,
	"doppler.csr":           dopplerCsr,
	"doppler.key":           dopplerKey,
	"loggregator-ca.crl":    loggregatorCaCrl,
	"loggregator-ca.crt":    loggregatorCaCrt,
	"loggregator-ca.key":    loggregatorCaKey,
	"metron.crt":            metronCrt,
	"metron.csr":            metronCsr,
	"metron.key":            metronKey,
	"reverselogproxy.crt":   reverselogproxyCrt,
	"reverselogproxy.csr":   reverselogproxyCsr,
	"reverselogproxy.key":   reverselogproxyKey,
	"syslogdrainbinder.crt": syslogdrainbinderCrt,
	"syslogdrainbinder.csr": syslogdrainbinderCsr,
	"syslogdrainbinder.key": syslogdrainbinderKey,
	"trafficcontroller.crt": trafficcontrollerCrt,
	"trafficcontroller.csr": trafficcontrollerCsr,
	"trafficcontroller.key": trafficcontrollerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"doppler.crt":           {dopplerCrt, map[string]*bintree{}},
	"doppler.csr":           {dopplerCsr, map[string]*bintree{}},
	"doppler.key":           {dopplerKey, map[string]*bintree{}},
	"loggregator-ca.crl":    {loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt":    {loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key":    {loggregatorCaKey, map[string]*bintree{}},
	"metron.crt":            {metronCrt, map[string]*bintree{}},
	"metron.csr":            {metronCsr, map[string]*bintree{}},
	"metron.key":            {metronKey, map[string]*bintree{}},
	"reverselogproxy.crt":   {reverselogproxyCrt, map[string]*bintree{}},
	"reverselogproxy.csr":   {reverselogproxyCsr, map[string]*bintree{}},
	"reverselogproxy.key":   {reverselogproxyKey, map[string]*bintree{}},
	"syslogdrainbinder.crt": {syslogdrainbinderCrt, map[string]*bintree{}},
	"syslogdrainbinder.csr": {syslogdrainbinderCsr, map[string]*bintree{}},
	"syslogdrainbinder.key": {syslogdrainbinderKey, map[string]*bintree{}},
	"trafficcontroller.crt": {trafficcontrollerCrt, map[string]*bintree{}},
	"trafficcontroller.csr": {trafficcontrollerCsr, map[string]*bintree{}},
	"trafficcontroller.key": {trafficcontrollerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
